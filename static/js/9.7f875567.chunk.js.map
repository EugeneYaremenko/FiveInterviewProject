{"version":3,"sources":["components/Count/Count.tsx","components/Title/Title.tsx","components/Examples/Examples.tsx","pages/ExamplePage.tsx"],"names":["Count","text","count","console","log","React","memo","Title","title","Examples","useState","number","setNumber","colored","setColored","styles","useMemo","color","computed","num","i","complexCompute","useEffect","age","setAge","salary","setSalary","handleIncrementAge","useCallback","handleIncrementSalary","className","style","onClick","prev","ExamplePage"],"mappings":"sLAEMA,EAAmD,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAGhE,OAFAC,QAAQC,IAAR,oBAAyBH,IAGvB,gCACGA,EADH,MACYC,MAKDG,MAAMC,KAAKN,GCVpBO,EAAqC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAG5C,OAFAL,QAAQC,IAAI,mBAEL,6BAAKI,KAGCH,MAAMC,KAAKC,GC2EXE,EA9EY,WAEzB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAiBMC,EAASC,mBACb,iBAAO,CACLC,MAAOJ,EAAU,UAAY,WAE/B,CAACA,IAGGK,EAAWF,mBAAQ,WACvB,OAvBqB,SAACG,GACtBhB,QAAQC,IAAI,kBAEZ,IADA,IAAIgB,EAAI,EACDA,EAAI,KAAYA,IACvB,OAAa,EAAND,EAmBAE,CAAeV,KACrB,CAACA,IAEJW,qBAAU,WACRnB,QAAQC,IAAI,oBACX,CAACW,IAGJ,MAAsBL,mBAAS,IAA/B,mBAAOa,EAAP,KAAYC,EAAZ,KACA,EAA4Bd,mBAAS,KAArC,mBAAOe,EAAP,KAAeC,EAAf,KAEMC,EAAqBC,uBAAY,WACrCJ,EAAOD,EAAM,KACZ,CAACA,IAEEM,EAAwBD,uBAAY,WACxCF,EAAUD,EAAS,KAClB,CAACA,IAEJ,OACE,sBAAKK,UAAU,WAAf,UACE,cAAC,EAAD,CAAOtB,MAAM,YACb,sBAAKuB,MAAOhB,EAAZ,qBAA6BG,KAC7B,cAAC,IAAD,CAAQc,QAvCkB,WAC5BpB,GAAU,SAACqB,GAAD,OAAUA,EAAO,MAsCehB,MAAM,UAA9C,uBAIA,cAAC,IAAD,CAAQe,QAvCkB,WAC5BpB,GAAU,SAACqB,GAAD,OAAUA,EAAO,MAsCehB,MAAM,YAA9C,uBAIA,cAAC,IAAD,CAAQe,QAAS,kBAAMlB,GAAW,SAACmB,GAAD,OAAWA,MAAOhB,MAAM,UAA1D,kBAGA,uBAEA,cAAC,EAAD,CAAOT,MAAM,gBACb,cAAC,EAAD,CAAOP,KAAK,MAAMC,MAAOqB,IACzB,cAAC,IAAD,CAAQS,QAASL,EAAoBV,MAAM,YAA3C,uBAIA,cAAC,EAAD,CAAOhB,KAAK,SAASC,MAAOuB,IAC5B,cAAC,IAAD,CAAQO,QAASH,EAAuBZ,MAAM,YAA9C,2BClESiB,UARe,WAC5B,OACE,mCACE,cAAC,EAAD","file":"static/js/9.7f875567.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Count: React.FC<{ text: string; count: number }> = ({ text, count }) => {\r\n  console.log(`Rendering ${text}`);\r\n\r\n  return (\r\n    <div>\r\n      {text} - {count}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Count);\r\n","import React from \"react\";\r\n\r\nconst Title: React.FC<{ title: string }> = ({ title }) => {\r\n  console.log(\"Rendering Title\");\r\n\r\n  return <h2>{title}</h2>;\r\n};\r\n\r\nexport default React.memo(Title);\r\n","import { MDBBtn } from \"mdb-react-ui-kit\";\r\nimport { useEffect, useMemo, useState, useCallback } from \"react\";\r\nimport Count from \"../Count\";\r\nimport Title from \"../Title\";\r\n\r\nconst Examples: React.FC = () => {\r\n  //useMemo\r\n  const [number, setNumber] = useState(42);\r\n  const [colored, setColored] = useState(false);\r\n\r\n  const complexCompute = (num: number) => {\r\n    console.log(\"complexCompute\");\r\n    let i = 0;\r\n    while (i < 1000000000) i++;\r\n    return num * 2;\r\n  };\r\n\r\n  const handleIncrementNumber = () => {\r\n    setNumber((prev) => prev + 1);\r\n  };\r\n\r\n  const handleDecrementNumber = () => {\r\n    setNumber((prev) => prev - 1);\r\n  };\r\n\r\n  const styles = useMemo(\r\n    () => ({\r\n      color: colored ? \"darkred\" : \"black\",\r\n    }),\r\n    [colored]\r\n  );\r\n\r\n  const computed = useMemo(() => {\r\n    return complexCompute(number);\r\n  }, [number]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Styles changed\");\r\n  }, [styles]);\r\n\r\n  // useCallback\r\n  const [age, setAge] = useState(25);\r\n  const [salary, setSalary] = useState(5000);\r\n\r\n  const handleIncrementAge = useCallback(() => {\r\n    setAge(age + 1);\r\n  }, [age]);\r\n\r\n  const handleIncrementSalary = useCallback(() => {\r\n    setSalary(salary + 1);\r\n  }, [salary]);\r\n\r\n  return (\r\n    <div className=\"examples\">\r\n      <Title title=\"useMemo\" />\r\n      <div style={styles}>Result: {computed}</div>\r\n      <MDBBtn onClick={handleIncrementNumber} color=\"primary\">\r\n        Increment\r\n      </MDBBtn>\r\n\r\n      <MDBBtn onClick={handleDecrementNumber} color=\"secondary\">\r\n        Decrement\r\n      </MDBBtn>\r\n\r\n      <MDBBtn onClick={() => setColored((prev) => !prev)} color=\"warning\">\r\n        Edit\r\n      </MDBBtn>\r\n      <hr />\r\n\r\n      <Title title=\"useCallback\" />\r\n      <Count text=\"Age\" count={age} />\r\n      <MDBBtn onClick={handleIncrementAge} color=\"secondary\">\r\n        Increment\r\n      </MDBBtn>\r\n\r\n      <Count text=\"Salary\" count={salary} />\r\n      <MDBBtn onClick={handleIncrementSalary} color=\"secondary\">\r\n        Decrement\r\n      </MDBBtn>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Examples;\r\n","import Examples from \"../components/Examples\";\r\n\r\nconst ExamplePage: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Examples />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExamplePage;\r\n"],"sourceRoot":""}