{"version":3,"sources":["hooks/useTypedSelector.ts","store/actions/user.ts","store/actions/todo.ts","store/actions/index.ts","hooks/useActions.ts","components/TodoList/todoList.module.css","components/TodoList/TodoList.tsx","pages/TodosPage.tsx"],"names":["useTypedSelector","useSelector","avatarGenerator","AvatarGenerator","fetchUsers","dispatch","a","type","UserActionType","FETCH_USERS","axios","get","res","data","map","item","avatar","generateRandomAvatar","FETCH_USERS_SUCCESS","payload","FETCH_USERS_ERROR","fetchTodos","page","limit","TodoActionTypes","FETCH_TODOS","params","_page","_limit","FETCH_TODO_SUCCESS","FETCH_TODO_ERROR","setTodoPage","SET_TODO_PAGE","UserActionCreators","TodoActionCreator","useActions","useDispatch","bindActionCreators","ActionCreators","module","exports","TodoList","state","todos","loading","error","useEffect","color","width","height","notify","toString","className","styles","todosList","todo","MDBCard","id","title","MDBBtn","icon","pagi","p","onClick","pagItemActive","pagItem","TodosPage"],"mappings":"kIAAA,sCAGaA,EAHb,MAGiEC,G,kTCE3DC,EAAkB,I,OAAIC,iBAEfC,EAAa,WACxB,8CAAO,WAAOC,GAAP,iBAAAC,EAAA,sEAEHD,EAAS,CAAEE,KAAMC,IAAeC,cAF7B,SAGeC,IAAMC,IAAI,8CAHzB,OAGGC,EAHH,OAKGC,EAAOD,EAAIC,KAAKC,KAAI,SAACC,GAAD,mBAAC,eACtBA,GADqB,IAExBC,OAAQd,EAAgBe,4BAG1BZ,EAAS,CAAEE,KAAMC,IAAeU,oBAAqBC,QAASN,IAV3D,gDAYHR,EAAS,CACPE,KAAMC,IAAeY,kBACrBD,QAAS,wBAdR,yDAAP,uD,QCJWE,EAAa,WAA0B,IAAzBC,EAAwB,uDAAjB,EAAGC,EAAc,uDAAN,EAC3C,8CAAO,WAAOlB,GAAP,eAAAC,EAAA,sEAEHD,EAAS,CAAEE,KAAMiB,IAAgBC,cAF9B,SAGef,IAAMC,IACtB,6CACA,CACEe,OAAQ,CACNC,MAAOL,EACPM,OAAQL,KARX,OAGGX,EAHH,OAaHP,EAAS,CAAEE,KAAMiB,IAAgBK,mBAAoBV,QAASP,EAAIC,OAb/D,gDAeHR,EAAS,CACPE,KAAMiB,IAAgBM,iBACtBX,QAAS,wBAjBR,yDAAP,uDAuBWY,EAAc,SAACT,GAC1B,MAAO,CACLf,KAAMiB,IAAgBQ,cACtBb,QAASG,IC3BE,6BACVW,GACAC,GCFQC,EAAa,WACxB,IAAM9B,EAAW+B,cAEjB,OAAOC,YAAmBC,EAAgBjC,K,wCCN5CkC,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,UAAY,4BAA4B,KAAO,uBAAuB,QAAU,0BAA0B,cAAgB,gCAAgC,QAAU,0BAA0B,OAAS,2B,iIC0E1OC,EA3DY,WACzB,MAA+CzC,aAC7C,SAAC0C,GAAD,OAAWA,EAAMC,SADXA,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,MAAOvB,EAA/B,EAA+BA,KAAMC,EAArC,EAAqCA,MAIrC,EAAoCY,cAA5Bd,EAAR,EAAQA,WAAYU,EAApB,EAAoBA,YAOpB,OAJAe,qBAAU,WACRzB,EAAWC,EAAMC,KAChB,CAACD,IAEAsB,EACK,cAAC,IAAD,CAAQrC,KAAK,YAAYwC,MAAM,UAAUC,MAAM,KAAKC,OAAO,QAGhEJ,GACFK,YAAOL,EAAMM,WAAY,SAIzB,qCACE,qBAAKC,UAAWC,IAAOV,MAAvB,SACE,oBAAIS,UAAWC,IAAOC,UAAtB,SACGX,EAAM7B,KAAI,SAACyC,GAAD,OACT,6BACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAaH,UAAWC,IAAOG,QAA/B,UACE,eAAC,IAAD,WACGD,EAAKE,GADR,KACcF,EAAKG,SAEnB,eAAC,IAAD,CAAQN,UAAWC,IAAOM,OAAQZ,MAAM,UAAxC,UACE,cAAC,IAAD,CAASa,KAAK,QAAQR,UAAU,SADlC,WAGA,kCACE,uBAAO7C,KAAK,aADd,qBATGgD,EAAKE,WAmBpB,qBAAKL,UAAWC,IAAOQ,KAAvB,SAtCU,CAAC,EAAG,EAAG,EAAG,EAAG,GAuCd/C,KAAI,SAACgD,GAAD,OACT,qBACEC,QAAS,kBAAMhC,EAAY+B,IAC3BV,UAAWU,IAAMxC,EAAO+B,IAAOW,cAAgBX,IAAOY,QAFxD,SAKGH,GAFIA,aCvDFI,UARa,WAC1B,OACE,mCACE,cAAC,EAAD","file":"static/js/6.54c76667.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store/reducers\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { Dispatch } from \"react\";\r\nimport axios from \"axios\";\r\nimport { IUser, UserAction, UserActionType } from \"../../types/user\";\r\n\r\nimport { AvatarGenerator } from \"random-avatar-generator\";\r\nconst avatarGenerator = new AvatarGenerator();\r\n\r\nexport const fetchUsers = () => {\r\n  return async (dispatch: Dispatch<UserAction>) => {\r\n    try {\r\n      dispatch({ type: UserActionType.FETCH_USERS });\r\n      const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n      const data = res.data.map((item: IUser) => ({\r\n        ...item,\r\n        avatar: avatarGenerator.generateRandomAvatar(),\r\n      }));\r\n\r\n      dispatch({ type: UserActionType.FETCH_USERS_SUCCESS, payload: data });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: UserActionType.FETCH_USERS_ERROR,\r\n        payload: \"Error loading users\",\r\n      });\r\n    }\r\n  };\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport axios from \"axios\";\r\nimport { TodoAction, TodoActionTypes } from \"../../types/todo\";\r\n\r\nexport const fetchTodos = (page = 1, limit = 5) => {\r\n  return async (dispatch: Dispatch<TodoAction>) => {\r\n    try {\r\n      dispatch({ type: TodoActionTypes.FETCH_TODOS });\r\n      const res = await axios.get(\r\n        \"https://jsonplaceholder.typicode.com/todos\",\r\n        {\r\n          params: {\r\n            _page: page,\r\n            _limit: limit,\r\n          },\r\n        }\r\n      );\r\n\r\n      dispatch({ type: TodoActionTypes.FETCH_TODO_SUCCESS, payload: res.data });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: TodoActionTypes.FETCH_TODO_ERROR,\r\n        payload: \"Error loading todos\",\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setTodoPage = (page: number): TodoAction => {\r\n  return {\r\n    type: TodoActionTypes.SET_TODO_PAGE,\r\n    payload: page,\r\n  };\r\n};\r\n","import * as UserActionCreators from \"./user\";\r\nimport * as TodoActionCreator from \"./todo\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  ...UserActionCreators,\r\n  ...TodoActionCreator,\r\n};\r\n","import { useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport ActionCreators from \"../store/actions/\";\r\n\r\nexport const useActions = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return bindActionCreators(ActionCreators, dispatch);\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todos\":\"todoList_todos__3kCBI\",\"todosList\":\"todoList_todosList__1ryp6\",\"pagi\":\"todoList_pagi__3q_Sx\",\"pagItem\":\"todoList_pagItem__2SiuG\",\"pagItemActive\":\"todoList_pagItemActive__2-nvp\",\"MDBCard\":\"todoList_MDBCard__2RETx\",\"MDBBtn\":\"todoList_MDBBtn__3sgmQ\"};","import React, { useEffect } from \"react\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport styles from \"./todoList.module.css\";\r\n\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBCardText,\r\n  MDBBtn,\r\n  MDBIcon,\r\n} from \"mdb-react-ui-kit\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nimport { notify } from \"../../services/notify\";\r\n\r\nconst TodoList: React.FC = () => {\r\n  const { todos, loading, error, page, limit } = useTypedSelector(\r\n    (state) => state.todos\r\n  );\r\n\r\n  const { fetchTodos, setTodoPage } = useActions();\r\n  const pages = [1, 2, 3, 4, 5];\r\n\r\n  useEffect(() => {\r\n    fetchTodos(page, limit);\r\n  }, [page]);\r\n\r\n  if (loading) {\r\n    return <Loader type=\"ThreeDots\" color=\"#3F51B5\" width=\"80\" height=\"80\" />;\r\n  }\r\n\r\n  if (error) {\r\n    notify(error.toString(), \"error\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.todos}>\r\n        <ul className={styles.todosList}>\r\n          {todos.map((todo) => (\r\n            <li key={todo.id}>\r\n              <MDBCard>\r\n                <MDBCardBody className={styles.MDBCard}>\r\n                  <MDBCardText>\r\n                    {todo.id}. {todo.title}\r\n                  </MDBCardText>\r\n                  <MDBBtn className={styles.MDBBtn} color=\"primary\">\r\n                    <MDBIcon icon=\"magic\" className=\"mr-1\" /> Edit\r\n                  </MDBBtn>\r\n                  <label>\r\n                    <input type=\"checkbox\" />\r\n                    Completed\r\n                  </label>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className={styles.pagi}>\r\n        {pages.map((p) => (\r\n          <div\r\n            onClick={() => setTodoPage(p)}\r\n            className={p === page ? styles.pagItemActive : styles.pagItem}\r\n            key={p}\r\n          >\r\n            {p}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import TodoList from \"../components/TodoList\";\r\n\r\nconst TodosPage: React.FC = () => {\r\n  return (\r\n    <>\r\n      <TodoList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodosPage;\r\n"],"sourceRoot":""}